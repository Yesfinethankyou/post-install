#!/bin/bash

# Download function for ease of reuse
function install_synergy {
	# Install
	echo_message info 'Downloading '$NAME' version '$VERSION'...'
	# Download Debian file that matches system architecture
	case `uname -i` in
		i386|i486|i586|i686)
			curl -O https://binaries.symless.com/v${VERSION}/synergy-v${VERSION}-stable-${BUILD}-Linux-i686.deb

			;;
		x86_64)
			curl -O https://binaries.symless.com/v${VERSION}/synergy-v${VERSION}-stable-${BUILD}-Linux-x86_64.deb
			;;
		*)
			whiptail --title "Error." --msgbox "No remote packages available to download." 8 64
			;;
	esac
	# Install package(s)
	echo_message info 'Installing '$NAME'...'
	elevate_privilege "dpkg -i $PACKAGE*.deb"
	elevate_privilege "apt install -fy"
	# Cleanup and finishh
	rm ${PACKAGE}*.deb
	echo_message success "Installation of '$PACKAGE' complete."
}


# Synergy
function synergy {
	# Variables
	PACKAGE=synergy
	VERSION=1.8.8
	BUILD=25a8cb2
	NAME="Synergy"
	# Install
	echo_message header 'Begin '$NAME' installation'
	# Check if package is installed
	check_packages $PACKAGE
	EXITSTATUS=$?
	# If package is not installed
	if [ $EXITSTATUS = 1 ]; then
		echo_message info $NAME 'is not installed.'
		echo 'Proceeding'
		install_synergy
		whiptail --title "Finished" --msgbox "Installation of $NAME complete." 8 64
		thirdparty
	else
		VERSCHECK=$(dpkg-query -W --showformat='${Version}\n' $PACKAGE)
		if [ "$BUILD" == "$VERSCHECK" ]; then
			# Already installed
			echo_message info $NAME 'already installed.'
			whiptail --title "Finished" --msgbox "$NAME is already installed." 8 64
			thirdparty
		else
			# Update
			echo_message info $NAME '$NAME is already installed, but out-of-date.'
			echo_message info 'Updating '$NAME'...'
			# Install
			install_synergy
			whiptail --title "Finished" --msgbox "Updating of $NAME complete." 8 64
			thirdparty
		fi
	fi
}